@model CompetitionManager.Models.Competition

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Competition</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RulebookID)

    <div class="form-group">
        @Html.LabelFor(model => model.GameID, "Game", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GameID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GameID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegistrationStartDate, "Start of registrations", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegistrationStartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegistrationStartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegistrationEndDate, "End of registrations", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegistrationEndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegistrationEndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, "Start date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, "End date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentCompetitionState, "Current competition state", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentCompetitionState, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentCompetitionState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainOrganizerID, "Organizer's PESEL", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MainOrganizerID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MainOrganizerID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Helpers, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="height: 200px; overflow: auto;">
            <table class="table">
                <tr>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>In this competition</th>
                </tr>

                    @{
                        List<CompetitionManager.Models.DTO.AssignedHelperDTO> helpers = ViewBag.Helpers;

                        foreach (var helperVar in helpers)
                        {
                            <tr>
                                <td>@helperVar.FirstName </td>
                                <td>@helperVar.LastName</td>
                                <td>
                                    <input type="checkbox"
                                           name="selectedHelpers"
                                           value="@helperVar.HelperID" @(Html.Raw(helperVar.Assigned ? "checked=\"checked\"" : "")) />
                                </td>
                            </tr>
                        }
                    }


                </table>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
  
}
<div>
    @Html.ActionLink("Create a helper for this competition", "CreateHelper", new { id = Model.ID }) 
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
